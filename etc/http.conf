user lognibelog logni;
worker_processes 10;
daemon off;

error_log  /dev/stderr;
pid        /var/run/logni-proxy.pid;

events {
    	accept_mutex_delay 100;
    	worker_connections 5000;
	use epoll;
}

#env VERSION;

http {

    	# log
    	log_format fmt '$remote_addr '
                    '$upstream_cache_status $host "$upstream_addr" "$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent"';

    	access_log /dev/stderr fmt;

    	# mime types
    	include /etc/nginx/mime.types;

    	# server
    	server_names_hash_bucket_size 128;
    	server_names_hash_max_size 2048;
    	server_tokens off;

    	# https://securityheaders.io
    	add_header X-Frame-Options DENY;
    	add_header X-Content-Type-Options nosniff;
    	add_header X-Xss-Protection "1; mode=block";
    	add_header Referrer-Policy no-referrer-when-downgrade;

    	add_header X-Developed-By CaptainCI.com;
    	#add_header X-Version $VERSION;

    	# 400 Bad Request - Request Header Or Cookie Too Large
    	large_client_header_buffers 4 32k;
   
    	# proxy
    	proxy_cache_path /opt/logni/belog/cache levels=2:2 keys_zone=lognibelog:256m inactive=24h max_size=15g;
    	proxy_temp_path /opt/logni/belog/tmp;

    	proxy_set_header Host $host;
    	proxy_set_header X-Real-IP $remote_addr;
    	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    	proxy_set_header X-Forwarded-Proto $scheme;

    	proxy_intercept_errors on;
    	proxy_connect_timeout 3;
    	proxy_send_timeout 3;
    	proxy_read_timeout 3;
    	proxy_cache_min_uses 1;                     # cached after 1 request
    	proxy_cache_key $host$request_uri;          # key for cache
    	proxy_cache_valid 200      1m;              # 200 ok		:  1 hour
    	proxy_cache_valid 301 302 11m;              # 301|2 redirect	: 11 minute
	proxy_cache_valid 404      1m;              # 404 not found	:  1 minute
    	proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
	proxy_ignore_headers Expires Cache-Control X-Accel-Expires;

    	proxy_set_header Accept-Encoding none;

    	## Compression
    	gzip on;
    	gzip_http_version 1.0;
    	gzip_comp_level 6;
    	gzip_proxied any;
    	gzip_min_length 256;
    	gzip_buffers 16 8k;
    	gzip_types text/plain text/css application/json application/javascript application/x-javascript text/javascript text/xml application/xml application/xml+rss application/atom+xml application/rdf+xml image/gif image/jpeg image/png;

    	# Some version of IE 6 don't handle compression well on some mime-types, so just disable for them
    	gzip_disable "MSIE [1-6].(?!.*SV1)";

    	# Set a vary header so downstream proxies don't send cached gzipped content to IE6
    	gzip_vary on;
    	## /Compression

    	## Header
    	#add_header Access-Control-Allow-Origin *;
    	add_header X-Cache $upstream_cache_status;
    	add_header X-Age $upstream_response_time;
    	add_header X-Proxy-By CaptainCI.com/proxy;
    	add_header Pragma public;
    	add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    	## /Header

    	# ---
    	# status
    	# http://nginx.org/en/docs/http/ngx_http_status_module.html
	server {
    		listen 443 ssl;
		server_name *.captainci.com;

		location /nginx-status {
			stub_status on;
		        allow 10.0.0.0/8;
			allow 172.16.0.0/12;
			allow 192.168.0.0/16;
        		deny all;
		}
    	}

	# js.logni.net
	server {
		listen 0.0.0.0:80 default_server;
		#listen 0.0.0.0:443 default_server ssl;

		server_name *.logni.net;
		server_tokens off;
		default_type application/x-javascript;

       		root /opt/logni/belog/www;

		# SSL
 		#ssl on;
  		#ssl_session_cache  builtin:1000  shared:SSL:10m;
		#ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
		#ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:!ADH:!AECDH:!MD5:!aNULL;
  		#ssl_prefer_server_ciphers on;
		#
		#ssl_certificate      	/etc/ssl/logni.net/logni.net.pem; 	
		#ssl_certificate_key	/etc/ssl/logni.net/logni.net.key;   	
		#add_header     	Strict-Transport-Security "max-age=31536000";
    		#add_header X-Frame-Options DENY;
    		##add_header X-Content-Type-Options nosniff;
    		#add_header X-Xss-Protection "1; mode=block";
   		#add_header Referrer-Policy no-referrer-when-downgrade;
   		#add_header X-Developed-By logni.net;
       	 	#proxy_ssl_session_reuse on;

		# content
        	location /js/ {
       	        	gzip on;
                	proxy_redirect off;
                	proxy_cache lognibelog;
                	proxy_cache_valid 200 304 4h;
                	expires 4h;
                	set $xcached "4h";
		}

        	location /log/ {

			# options
	    		if ($request_method = 'OPTIONS') {
				add_header 'Access-Control-Allow-Origin' "$http_origin";
     		 		add_header 'Access-Control-Allow-Credentials' 'true';
	      			add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
      				add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE';

    				add_header 'X-request' 'OPTIONS';
      				add_header 'Access-Control-Max-Age' 1728000;
      				add_header 'Content-Type' 'text/plain charset=UTF-8';
	      			add_header 'Content-Length' 0;
	      			return 204;
	    		}

			default_type application/json;
    			add_header 'X-request' 'GET';

                	# disable cache
               	 	add_header Last-Modified $date_gmt;
               	 	add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
                	if_modified_since off;
                	expires off;
                	etag off;
			set $xcached "0m";
		}
	}
}
